openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /bike/bikes/:
    get:
      operationId: bike_bikes_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bike'
          description: ''
    post:
      operationId: bike_bikes_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BikeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BikeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BikeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
          description: ''
  /bike/bikes/{id}/:
    get:
      operationId: bike_bikes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bike.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
          description: ''
    put:
      operationId: bike_bikes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bike.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BikeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BikeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BikeRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
          description: ''
    patch:
      operationId: bike_bikes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bike.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBikeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBikeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBikeRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
          description: ''
    delete:
      operationId: bike_bikes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bike.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/brands/:
    get:
      operationId: bike_brands_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
    post:
      operationId: bike_brands_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
  /bike/brands/{id}/:
    get:
      operationId: bike_brands_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    put:
      operationId: bike_brands_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    patch:
      operationId: bike_brands_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrandRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: ''
    delete:
      operationId: bike_brands_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this brand.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/cassettes/:
    get:
      operationId: bike_cassettes_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cassette'
          description: ''
    post:
      operationId: bike_cassettes_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cassette'
          description: ''
  /bike/cassettes/{id}/:
    get:
      operationId: bike_cassettes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cassette.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cassette'
          description: ''
    put:
      operationId: bike_cassettes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cassette.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CassetteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cassette'
          description: ''
    patch:
      operationId: bike_cassettes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cassette.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCassetteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCassetteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCassetteRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cassette'
          description: ''
    delete:
      operationId: bike_cassettes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cassette.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/chainrings/:
    get:
      operationId: bike_chainrings_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chainring'
          description: ''
    post:
      operationId: bike_chainrings_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chainring'
          description: ''
  /bike/chainrings/{id}/:
    get:
      operationId: bike_chainrings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chainring.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chainring'
          description: ''
    put:
      operationId: bike_chainrings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chainring.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChainringRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chainring'
          description: ''
    patch:
      operationId: bike_chainrings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chainring.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChainringRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChainringRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChainringRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chainring'
          description: ''
    delete:
      operationId: bike_chainrings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chainring.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/cranks/:
    get:
      operationId: bike_cranks_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Crank'
          description: ''
    post:
      operationId: bike_cranks_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrankRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrankRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrankRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crank'
          description: ''
  /bike/cranks/{id}/:
    get:
      operationId: bike_cranks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crank.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crank'
          description: ''
    put:
      operationId: bike_cranks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crank.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrankRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrankRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrankRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crank'
          description: ''
    patch:
      operationId: bike_cranks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crank.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCrankRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCrankRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCrankRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crank'
          description: ''
    delete:
      operationId: bike_cranks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this crank.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/external-headsets/:
    get:
      operationId: bike_external_headsets_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalHeadset'
          description: ''
    post:
      operationId: bike_external_headsets_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalHeadset'
          description: ''
  /bike/external-headsets/{id}/:
    get:
      operationId: bike_external_headsets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this external headset.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalHeadset'
          description: ''
    put:
      operationId: bike_external_headsets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this external headset.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalHeadsetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalHeadset'
          description: ''
    patch:
      operationId: bike_external_headsets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this external headset.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExternalHeadsetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExternalHeadsetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExternalHeadsetRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalHeadset'
          description: ''
    delete:
      operationId: bike_external_headsets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this external headset.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/forks/:
    get:
      operationId: bike_forks_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fork'
          description: ''
    post:
      operationId: bike_forks_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForkRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fork'
          description: ''
  /bike/forks/{id}/:
    get:
      operationId: bike_forks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fork.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fork'
          description: ''
    put:
      operationId: bike_forks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fork.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForkRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fork'
          description: ''
    patch:
      operationId: bike_forks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fork.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedForkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedForkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedForkRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fork'
          description: ''
    delete:
      operationId: bike_forks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fork.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/frames/:
    get:
      operationId: bike_frames_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Frame'
          description: ''
    post:
      operationId: bike_frames_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
          description: ''
  /bike/frames/{id}/:
    get:
      operationId: bike_frames_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this frame.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
          description: ''
    put:
      operationId: bike_frames_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this frame.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
          description: ''
    patch:
      operationId: bike_frames_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this frame.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFrameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFrameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFrameRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frame'
          description: ''
    delete:
      operationId: bike_frames_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this frame.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/handlebars/:
    get:
      operationId: bike_handlebars_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Handlebar'
          description: ''
    post:
      operationId: bike_handlebars_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handlebar'
          description: ''
  /bike/handlebars/{id}/:
    get:
      operationId: bike_handlebars_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this handlebar.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handlebar'
          description: ''
    put:
      operationId: bike_handlebars_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this handlebar.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HandlebarRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handlebar'
          description: ''
    patch:
      operationId: bike_handlebars_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this handlebar.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHandlebarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHandlebarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHandlebarRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handlebar'
          description: ''
    delete:
      operationId: bike_handlebars_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this handlebar.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/pedals/:
    get:
      operationId: bike_pedals_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedal'
          description: ''
    post:
      operationId: bike_pedals_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PedalRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedal'
          description: ''
  /bike/pedals/{id}/:
    get:
      operationId: bike_pedals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pedal.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedal'
          description: ''
    put:
      operationId: bike_pedals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pedal.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PedalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PedalRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedal'
          description: ''
    patch:
      operationId: bike_pedals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pedal.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPedalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPedalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPedalRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedal'
          description: ''
    delete:
      operationId: bike_pedals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pedal.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/saddles/:
    get:
      operationId: bike_saddles_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Saddle'
          description: ''
    post:
      operationId: bike_saddles_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saddle'
          description: ''
  /bike/saddles/{id}/:
    get:
      operationId: bike_saddles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this saddle.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saddle'
          description: ''
    put:
      operationId: bike_saddles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this saddle.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaddleRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saddle'
          description: ''
    patch:
      operationId: bike_saddles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this saddle.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSaddleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSaddleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSaddleRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saddle'
          description: ''
    delete:
      operationId: bike_saddles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this saddle.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/seatposts/:
    get:
      operationId: bike_seatposts_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seatpost'
          description: ''
    post:
      operationId: bike_seatposts_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seatpost'
          description: ''
  /bike/seatposts/{id}/:
    get:
      operationId: bike_seatposts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seatpost.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seatpost'
          description: ''
    put:
      operationId: bike_seatposts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seatpost.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SeatpostRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seatpost'
          description: ''
    patch:
      operationId: bike_seatposts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seatpost.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeatpostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeatpostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeatpostRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seatpost'
          description: ''
    delete:
      operationId: bike_seatposts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this seatpost.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/stems/:
    get:
      operationId: bike_stems_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stem'
          description: ''
    post:
      operationId: bike_stems_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StemRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stem'
          description: ''
  /bike/stems/{id}/:
    get:
      operationId: bike_stems_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stem.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stem'
          description: ''
    put:
      operationId: bike_stems_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stem.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StemRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stem'
          description: ''
    patch:
      operationId: bike_stems_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stem.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStemRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stem'
          description: ''
    delete:
      operationId: bike_stems_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stem.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/tires/:
    get:
      operationId: bike_tires_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TireSet'
          description: ''
    post:
      operationId: bike_tires_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TireSet'
          description: ''
  /bike/tires/{id}/:
    get:
      operationId: bike_tires_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tire set.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TireSet'
          description: ''
    put:
      operationId: bike_tires_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tire set.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TireSetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TireSet'
          description: ''
    patch:
      operationId: bike_tires_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tire set.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTireSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTireSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTireSetRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TireSet'
          description: ''
    delete:
      operationId: bike_tires_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tire set.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /bike/wheels/:
    get:
      operationId: bike_wheels_list
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WheelSet'
          description: ''
    post:
      operationId: bike_wheels_create
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelSet'
          description: ''
  /bike/wheels/{id}/:
    get:
      operationId: bike_wheels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wheel set.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelSet'
          description: ''
    put:
      operationId: bike_wheels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wheel set.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WheelSetRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelSet'
          description: ''
    patch:
      operationId: bike_wheels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wheel set.
        required: true
      tags:
      - bike
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWheelSetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWheelSetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWheelSetRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WheelSet'
          description: ''
    delete:
      operationId: bike_wheels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this wheel set.
        required: true
      tags:
      - bike
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          description: No response body
  /profile/:
    get:
      operationId: profile_list
      tags:
      - profile
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Bike:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        front_center:
          type: integer
          maximum: 32767
          minimum: 0
        wheelbase:
          type: integer
          maximum: 32767
          minimum: 0
        spacers:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
        handlebar:
          type: integer
          nullable: true
        cassette:
          type: integer
          nullable: true
        pedal:
          type: integer
          nullable: true
      required:
      - brand
      - created_at
      - id
      - mpn
      - size
      - updated_at
    BikeRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        front_center:
          type: integer
          maximum: 32767
          minimum: 0
        wheelbase:
          type: integer
          maximum: 32767
          minimum: 0
        spacers:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
        handlebar:
          type: integer
          nullable: true
        cassette:
          type: integer
          nullable: true
        pedal:
          type: integer
          nullable: true
      required:
      - brand
      - mpn
      - size
    Brand:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    BrandRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    Cassette:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - brand
      - created_at
      - gears
      - id
      - mpn
      - size
      - updated_at
    CassetteRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - brand
      - gears
      - mpn
      - size
    Chainring:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        bike:
          type: integer
      required:
      - bike
      - gears
      - id
    ChainringRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        bike:
          type: integer
      required:
      - bike
      - gears
    Crank:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        length:
          type: integer
          maximum: 32767
          minimum: 0
        q_factor:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - id
      - length
      - q_factor
    CrankRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        q_factor:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - length
      - q_factor
    ExternalHeadset:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        upper_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        lower_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - id
      - lower_cup_stack_height
      - upper_cup_stack_height
    ExternalHeadsetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        upper_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        lower_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - lower_cup_stack_height
      - upper_cup_stack_height
    Fork:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        crown_to_axle:
          type: integer
          maximum: 32767
          minimum: 0
        steerer_tube:
          type: integer
          maximum: 32767
          minimum: 0
        travel:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - crown_to_axle
      - id
      - offset
      - steerer_tube
      - travel
    ForkRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        crown_to_axle:
          type: integer
          maximum: 32767
          minimum: 0
        steerer_tube:
          type: integer
          maximum: 32767
          minimum: 0
        travel:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - crown_to_axle
      - offset
      - steerer_tube
      - travel
    Frame:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        stack:
          type: integer
          maximum: 32767
          minimum: 0
        chainstay:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        actual_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        effective_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        seat_tube:
          type: integer
          maximum: 32767
          minimum: 0
        bb_drop:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - actual_seat_tube_angle
      - bb_drop
      - bike
      - chainstay
      - effective_seat_tube_angle
      - head_tube
      - head_tube_angle
      - id
      - reach
      - seat_tube
      - stack
    FrameRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        stack:
          type: integer
          maximum: 32767
          minimum: 0
        chainstay:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        actual_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        effective_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        seat_tube:
          type: integer
          maximum: 32767
          minimum: 0
        bb_drop:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - actual_seat_tube_angle
      - bb_drop
      - bike
      - chainstay
      - effective_seat_tube_angle
      - head_tube
      - head_tube_angle
      - reach
      - seat_tube
      - stack
    Handlebar:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        width:
          type: integer
          maximum: 32767
          minimum: 0
        rise:
          type: integer
          maximum: 32767
          minimum: 0
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        backsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        upsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare_out:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_width:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - backsweep
      - brand
      - created_at
      - drop_flare
      - drop_flare_out
      - drop_width
      - id
      - mpn
      - reach
      - rise
      - size
      - updated_at
      - upsweep
      - width
    HandlebarRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        width:
          type: integer
          maximum: 32767
          minimum: 0
        rise:
          type: integer
          maximum: 32767
          minimum: 0
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        backsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        upsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare_out:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_width:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - backsweep
      - brand
      - drop_flare
      - drop_flare_out
      - drop_width
      - mpn
      - reach
      - rise
      - size
      - upsweep
      - width
    PatchedBikeRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        front_center:
          type: integer
          maximum: 32767
          minimum: 0
        wheelbase:
          type: integer
          maximum: 32767
          minimum: 0
        spacers:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
        handlebar:
          type: integer
          nullable: true
        cassette:
          type: integer
          nullable: true
        pedal:
          type: integer
          nullable: true
    PatchedBrandRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
    PatchedCassetteRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
    PatchedChainringRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        gears:
          type: array
          items:
            type: integer
            maximum: 32767
            minimum: 0
        bike:
          type: integer
    PatchedCrankRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        q_factor:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedExternalHeadsetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        upper_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        lower_cup_stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedForkRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        crown_to_axle:
          type: integer
          maximum: 32767
          minimum: 0
        steerer_tube:
          type: integer
          maximum: 32767
          minimum: 0
        travel:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedFrameRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        stack:
          type: integer
          maximum: 32767
          minimum: 0
        chainstay:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube:
          type: integer
          maximum: 32767
          minimum: 0
        head_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        actual_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        effective_seat_tube_angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        seat_tube:
          type: integer
          maximum: 32767
          minimum: 0
        bb_drop:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedHandlebarRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        width:
          type: integer
          maximum: 32767
          minimum: 0
        rise:
          type: integer
          maximum: 32767
          minimum: 0
        reach:
          type: integer
          maximum: 32767
          minimum: 0
        backsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        upsweep:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_flare_out:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        drop_width:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
    PatchedPedalRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        pedal_center:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
    PatchedSaddleRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedSeatpostRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedStemRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        steerer_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedTireSetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        front_width:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_width:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    PatchedWheelSetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
    Pedal:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        pedal_center:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - brand
      - created_at
      - id
      - mpn
      - pedal_center
      - size
      - stack_height
      - updated_at
    PedalRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        model:
          type: string
          maxLength: 100
        size:
          type: string
          maxLength: 100
        gtin:
          type: integer
          maximum: 99999999999999
          minimum: 0
          format: int64
          nullable: true
        mpn:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        stack_height:
          type: integer
          maximum: 32767
          minimum: 0
        pedal_center:
          type: integer
          maximum: 32767
          minimum: 0
        brand:
          type: integer
          nullable: true
        owner:
          type: integer
          nullable: true
      required:
      - brand
      - mpn
      - pedal_center
      - size
      - stack_height
    Saddle:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - id
      - offset
    SaddleRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - offset
    Seatpost:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        length:
          type: integer
          maximum: 32767
          minimum: 0
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - id
      - length
      - offset
    SeatpostRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        offset:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - length
      - offset
    StatusEnum:
      enum:
      - private
      - public
      - awaiting_approval
      - published
      - rejected
      type: string
      description: |-
        * `private` - Private
        * `public` - Public
        * `awaiting_approval` - Awaiting approval
        * `published` - Published
        * `rejected` - Rejected
    Stem:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        length:
          type: integer
          maximum: 32767
          minimum: 0
        angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        steerer_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - angle
      - bike
      - id
      - length
      - steerer_height
    StemRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        length:
          type: integer
          maximum: 32767
          minimum: 0
        angle:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        steerer_height:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - angle
      - bike
      - length
      - steerer_height
    TireSet:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        front_width:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_width:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - front_diameter
      - front_width
      - id
      - rear_diameter
      - rear_width
    TireSetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        front_width:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_width:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - front_diameter
      - front_width
      - rear_diameter
      - rear_width
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
      required:
      - password
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - password
      - username
    WheelSet:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        id:
          type: integer
          readOnly: true
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - front_diameter
      - id
      - rear_diameter
    WheelSetRequest:
      type: object
      description: |-
        A serializer mixin that provides an easy way to assign permissions
        to given users and/or group when an object is created or updated.
      properties:
        front_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        rear_diameter:
          type: integer
          maximum: 32767
          minimum: 0
        bike:
          type: integer
      required:
      - bike
      - front_diameter
      - rear_diameter
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
